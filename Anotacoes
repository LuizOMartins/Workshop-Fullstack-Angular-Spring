WorkShop 1: 

Front-end: apresentacao
Back-end: Servidor/banco de dados / Servidor de Arquivos.

Full-stack: duas partes.
front+back

Arquiterua Tradicional: 
- Usa muito o servidor.

Arquiterua Moderna: (SOFEA) - Arquitetura de Front-End Orientados a Serviços
- Servidor de downloads (arquivos do SPA)


Beneficios:
- Interoperabilidade:
	- Várias interfaces com mesmo back-end

- Desacoplamento: 
	- desacoplamento entre front-end e back-end

- Escalabilidade: 

Escalabilidade horizontal: adicionar nós a um sistema, exemplo, criar novas instancias da aplicação e ter um balanceamento.
Escalabilidade Vertical:  adicionar novos recursos a um nó.

- Equipes Especialistas

- Melhor experiencia do usuário:
 	- baixa latência
 	- front-end carrega apenas uma vez

 Single-Page Applications:
 -  carrega apenas uma vez no front.
 -  aplicacao fica armazenada no navegador
 -  apenas trafego de dados.

---------------------------------------------------

WorkShop 2: Assuntos abortados: Angular, Spring  e REST.

-> REST:  modelo arquitetural.
por que REST:
- seperação de cliente e servidor.
- escalabilidade
- independente de linguagem


Constraints:
- Cliente Servidor
- Stateless (não guarda estado). 
- Cache
- Interface Uniforme
- Sistema em camadas
- Codigo Sob-demanda

RESTfull: implementação de API com REST.

Protocolo: http://
Protocolo Requisição resposta.

**composicao da requisicao.

**tabela de Status de requisições.

URI: Unifom Resource Identifier
- Identifica os recursos.

URI/produtos/{codigo}
URL: http://compra/produtos/{codigo}

JAMAIS MODELO A API COMO UM VERBO.
exeplo:

POST /salvarProduto HTTP 1.1
{
	"nome":"Celular A50",
	"preco":1000
}
*Nesses exeplo funciona, mas o URI /salvarProduto é errado, o certo seria /produtos, assim
somente mudando os verbos para interagir com o recurso.


Recurso:  abstração sobre um determinado tipo de informação que uma aplicação gerencia.
Representação: estado de um recurso.

Métodos HTTP:
GET   (pegar)
POST (criar)
PUT  (geralmente usado para atualizar um recurso)
DELETE (remoção de um recurso)

---------------------------

Spring: um conjunto de projetos.

Spring Framework: projeto que deu origem a todos os outros projetos do Ecosistema Spring.

Spring MVC: framework para criações de projetos WEB.

Injeção de dependências: 
@Autowired
- faz a instanciação de dependências.

Spring Security: Projeto para Segurança.

Spring Data JPA: Projeto sobre JPA no Ecossistema Spring.

Angular: Angular 2+ 
- Criado por dev google.
- SPA
- Open Source

Versionamento do Angular:  

SEMVER:
Semantic Versionning
1. 1.  2
Major (breaking change - se uma mudança pode quebrar o codigo) -  Minor(Nova funcionalidade)  - Patch (correção de Bugs).

-> TypeScript
- linguagem para desenvolvimento em Angular.

Transpilação:  typescript >  java Script.

Biblioteca de Componentes:  conjunto de componentes que já exitem.

-----------------------------------------------------------------------------

Workshop 3:

Projeto: Oportunidades.

OportunidadeRepository extends JpaRepository<Oportunidade, Long>{
-> criar uma instancia em tempo de execucao.

Bean Validation: anotacao no campos da classe model (exemplo 	@NotEmpty) e incluir @Valid no Controlador da requisição.

// implementar put - atualização e exclusão!


->  Visual Studio Code > View > Terminal 

ng new comercial-ui

Erro:
Não pode ser carregado porque a execução de scripts foi desabilitada neste sistema. Para obter mais informações, consulte 
about_Execution_Policies em https://go.microsoft.com/fwlink/?LinkID=135170.
Set-ExecutionPolicy RemoteSigned - power sell


Angular CLI: ferramenta de linha de comando que ajuda nos projeto Angular.

ng serve

Componente:
	CSS.
	HTML.
	TypeScript.

-> Interpolação Angular:

Two way data binding angular:

ng g c painel-negociacao --skip-tests

-> crair componente painel-negociacao 

http://localhost:4200/


Visual Studio code:

table>tr>th*3


ng g s  oportunidade --skip-tests
->criar service 

show databases;

use comercial;

show tables;

select * from oportunidade;

---------

instalacao:
npm install primeng primeicons primeflex @angular/animations --save

------------------------------------------
npm WARN @angular/common@7.2.16 requires a peer of @angular/core@7.2.16 but none is installed. You must install peer dependencies yourself.
- ng update --all --force
ERROR in The Angular Compiler requires TypeScript >=3.4.0 and <3.6.0 but 3.7.5 was found instead.
npm i --save-dev typescript@3.4.5
------------------------------------------







